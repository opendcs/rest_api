
/* Drop Indexes */

DROP INDEX IF EXISTS EVT_PLATFORM_ID_IDX;
DROP INDEX IF EXISTS EVT_PLAT_MSG_IDX;
DROP INDEX IF EXISTS EVT_SCHED_IDX;
DROP INDEX IF EXISTS EVT_TIME_IDX;



/* Drop Tables */

DROP TABLE IF EXISTS CONFIGSENSORPROPERTY;
DROP TABLE IF EXISTS CONFIGSENSORDATATYPE;
DROP TABLE IF EXISTS CONFIGSENSOR;
DROP TABLE IF EXISTS CP_ALGO_PROPERTY;
DROP TABLE IF EXISTS CP_COMP_PROPERTY;
DROP TABLE IF EXISTS CP_COMP_DEPENDS_SCRATCHPAD;
DROP TABLE IF EXISTS CP_COMP_TS_PARM;
DROP TABLE IF EXISTS CP_COMP_DEPENDS;
DROP TABLE IF EXISTS CP_COMPUTATION;
DROP TABLE IF EXISTS CP_ALGO_SCRIPT;
DROP TABLE IF EXISTS CP_ALGO_TS_PARM;
DROP TABLE IF EXISTS CP_ALGORITHM;
DROP TABLE IF EXISTS CP_COMP_PROC_LOCK;
DROP TABLE IF EXISTS CP_COMP_TASKLIST;
DROP TABLE IF EXISTS CP_DEPENDS_NOTIFY;
DROP TABLE IF EXISTS DACQ_EVENT;
DROP TABLE IF EXISTS ROUNDINGRULE;
DROP TABLE IF EXISTS DATAPRESENTATION;
DROP TABLE IF EXISTS PLATFORM_STATUS;
DROP TABLE IF EXISTS SCHEDULE_ENTRY_STATUS;
DROP TABLE IF EXISTS SCHEDULE_ENTRY;
DROP TABLE IF EXISTS ROUTINGSPECPROPERTY;
DROP TABLE IF EXISTS ROUTINGSPECNETWORKLIST;
DROP TABLE IF EXISTS ROUTINGSPEC;
DROP TABLE IF EXISTS DATASOURCEGROUPMEMBER;
DROP TABLE IF EXISTS DATASOURCE;
DROP TABLE IF EXISTS DATATYPEEQUIVALENCE;
DROP TABLE IF EXISTS TS_NUM_0000;
DROP TABLE IF EXISTS TS_ANNOTATION;
DROP TABLE IF EXISTS TSDB_GROUP_MEMBER_TS;
DROP TABLE IF EXISTS TS_STRING_0000;
DROP TABLE IF EXISTS TS_PROPERTY;
DROP TABLE IF EXISTS TS_SPEC;
DROP TABLE IF EXISTS TSDB_GROUP_MEMBER_DT;
DROP TABLE IF EXISTS DATATYPE;
DROP TABLE IF EXISTS DCP_TRANS_DAY_MAP;
DROP TABLE IF EXISTS DECODESDATABASEVERSION;
DROP TABLE IF EXISTS SCRIPTSENSOR;
DROP TABLE IF EXISTS FORMATSTATEMENT;
DROP TABLE IF EXISTS DECODESSCRIPT;
DROP TABLE IF EXISTS ENGINEERINGUNIT;
DROP TABLE IF EXISTS ENUMVALUE;
DROP TABLE IF EXISTS ENUM;
DROP TABLE IF EXISTS EQUIPMENTPROPERTY;
DROP TABLE IF EXISTS EQUIPMENTMODEL;
DROP TABLE IF EXISTS REF_LOADING_APPLICATION_PROP;
DROP TABLE IF EXISTS TSDB_DATA_SOURCE;
DROP TABLE IF EXISTS HDB_LOADING_APPLICATION;
DROP TABLE IF EXISTS INTERVAL_CODE;
DROP TABLE IF EXISTS NETWORKLISTENTRY;
DROP TABLE IF EXISTS NETWORKLIST;
DROP TABLE IF EXISTS TRANSPORTMEDIUM;
DROP TABLE IF EXISTS PLATFORMSENSORPROPERTY;
DROP TABLE IF EXISTS PLATFORMSENSOR;
DROP TABLE IF EXISTS PLATFORMPROPERTY;
DROP TABLE IF EXISTS PLATFORM;
DROP TABLE IF EXISTS PLATFORMCONFIG;
DROP TABLE IF EXISTS PRESENTATIONGROUP;
DROP TABLE IF EXISTS SERIAL_PORT_STATUS;
DROP TABLE IF EXISTS SITE_PROPERTY;
DROP TABLE IF EXISTS SITENAME;
DROP TABLE IF EXISTS TSDB_GROUP_MEMBER_SITE;
DROP TABLE IF EXISTS SITE;
DROP TABLE IF EXISTS STORAGE_TABLE_LIST;
DROP TABLE IF EXISTS TSDB_DATABASE_VERSION;
DROP TABLE IF EXISTS TSDB_GROUP_MEMBER_GROUP;
DROP TABLE IF EXISTS TSDB_GROUP_MEMBER_OTHER;
DROP TABLE IF EXISTS TSDB_GROUP;
DROP TABLE IF EXISTS TSDB_PROPERTY;
DROP TABLE IF EXISTS UNITCONVERTER;




/* Create Tables */

CREATE TABLE CONFIGSENSOR
(
	CONFIGID INT NOT NULL,
	-- Ordinal number of this sensor within this configuration
	SENSORNUMBER INT NOT NULL,
	SENSORNAME VARCHAR(64) NOT NULL,
	RECORDINGMODE CHAR NOT NULL,
	-- # seconds between samples taken on the platform.
	RECORDINGINTERVAL INT,
	-- Second of day of first sample taken on the platform.
	-- Used for auto time-tagging.
	TIMEOFFIRSTSAMPLE INT,
	-- legacy not used
	EQUIPMENTID INT,
	-- If not null, values below this are tossed.
	ABSOLUTEMIN DOUBLE PRECISION,
	-- If not null, values above this are tossed.
	ABSOLUTEMAX DOUBLE PRECISION,
	-- Used by USGS
	STAT_CD VARCHAR(5),
	PRIMARY KEY (CONFIGID, SENSORNUMBER)
) WITHOUT OIDS;


CREATE TABLE CONFIGSENSORDATATYPE
(
	CONFIGID INT NOT NULL,
	-- Ordinal number of this sensor within this configuration
	SENSORNUMBER INT NOT NULL,
	DATATYPEID INT NOT NULL,
	PRIMARY KEY (CONFIGID, SENSORNUMBER, DATATYPEID)
) WITHOUT OIDS;


CREATE TABLE CONFIGSENSORPROPERTY
(
	CONFIGID INT NOT NULL,
	-- Ordinal number of this sensor within this configuration
	SENSORNUMBER INT NOT NULL,
	PROP_NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (CONFIGID, SENSORNUMBER, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE CP_ALGORITHM
(
	ALGORITHM_ID INT NOT NULL UNIQUE,
	ALGORITHM_NAME VARCHAR(64) NOT NULL UNIQUE,
	-- May be null for pseudo or placeholder algorithms
	EXEC_CLASS VARCHAR(240),
	CMMNT VARCHAR(1000),
	PRIMARY KEY (ALGORITHM_ID)
) WITHOUT OIDS;


CREATE TABLE CP_ALGO_PROPERTY
(
	ALGORITHM_ID INT NOT NULL,
	PROP_NAME VARCHAR(48) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (ALGORITHM_ID, PROP_NAME),
	CONSTRAINT algo_prop_unique UNIQUE (ALGORITHM_ID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE CP_ALGO_SCRIPT
(
	ALGORITHM_ID INT NOT NULL,
	-- B=Before, T=timeslice, A=After. Other chars are reserved.
	SCRIPT_TYPE CHAR NOT NULL,
	BLOCK_NUM INT NOT NULL,
	SCRIPT_DATA VARCHAR(4000) NOT NULL,
	PRIMARY KEY (ALGORITHM_ID, SCRIPT_TYPE, BLOCK_NUM)
) WITHOUT OIDS;


CREATE TABLE CP_ALGO_TS_PARM
(
	ALGORITHM_ID INT NOT NULL,
	ALGO_ROLE_NAME VARCHAR(24) NOT NULL,
	PARM_TYPE VARCHAR(24) NOT NULL,
	CONSTRAINT algo_role_unique UNIQUE (ALGORITHM_ID, ALGO_ROLE_NAME)
) WITHOUT OIDS;


CREATE TABLE CP_COMPUTATION
(
	COMPUTATION_ID INT NOT NULL UNIQUE,
	COMPUTATION_NAME VARCHAR(64) NOT NULL UNIQUE,
	ALGORITHM_ID INT,
	CMMNT VARCHAR(1000),
	LOADING_APPLICATION_ID INT,
	DATE_TIME_LOADED BIGINT NOT NULL,
	ENABLED VARCHAR(5) NOT NULL,
	-- Null means goes to the beggining of time.
	EFFECTIVE_START_DATE_TIME BIGINT,
	-- Null means never expires
	EFFECTIVE_END_DATE_TIME BIGINT,
	GROUP_ID INT,
	PRIMARY KEY (COMPUTATION_ID)
) WITHOUT OIDS;


-- An entry in this table asserts that a time series is an input to a given computation.
-- The computation processor uses it to determine which computations to execute for a given input.
CREATE TABLE CP_COMP_DEPENDS
(
	TS_ID INT NOT NULL,
	COMPUTATION_ID INT NOT NULL,
	PRIMARY KEY (TS_ID, COMPUTATION_ID)
) WITHOUT OIDS;


CREATE TABLE CP_COMP_DEPENDS_SCRATCHPAD
(
	TS_ID INT NOT NULL,
	COMPUTATION_ID INT NOT NULL,
	PRIMARY KEY (TS_ID, COMPUTATION_ID)
) WITHOUT OIDS;


CREATE TABLE CP_COMP_PROC_LOCK
(
	LOADING_APPLICATION_ID INT NOT NULL UNIQUE,
	PID INT NOT NULL,
	HOSTNAME VARCHAR(400) NOT NULL,
	HEARTBEAT BIGINT NOT NULL,
	CUR_STATUS VARCHAR(64)
) WITHOUT OIDS;


CREATE TABLE CP_COMP_PROPERTY
(
	COMPUTATION_ID INT NOT NULL,
	PROP_NAME VARCHAR(48) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (COMPUTATION_ID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE CP_COMP_TASKLIST
(
	RECORD_NUM INT NOT NULL UNIQUE,
	LOADING_APPLICATION_ID INT NOT NULL,
	TS_ID INT NOT NULL,
	-- Numeric value of the sample, or null if delete or this is a text value.
	NUM_VALUE DOUBLE PRECISION,
	-- Text value of the sample, or null if this is numeric or a deletion
	TXT_VALUE VARCHAR(64),
	-- Time that this tasklist record was created
	DATE_TIME_LOADED BIGINT NOT NULL,
	-- Time of the data sample
	SAMPLE_TIME BIGINT NOT NULL,
	DELETE_FLAG VARCHAR(5) DEFAULT 'FALSE' NOT NULL,
	FLAGS INT NOT NULL,
	SOURCE_ID INT NOT NULL,
	-- Null for normal data, if a comp fails, it remains in the tasklist for a finite amount of time.
	FAIL_TIME BIGINT,
	PRIMARY KEY (RECORD_NUM)
) WITHOUT OIDS;


CREATE TABLE CP_COMP_TS_PARM
(
	COMPUTATION_ID INT NOT NULL,
	ALGO_ROLE_NAME VARCHAR(24) NOT NULL,
	-- Only for non-group comps where the TS is completely specified.
	SITE_DATATYPE_ID INT,
	-- Must be either null or match a valid interval code
	INTERVAL_ABBR VARCHAR(24),
	-- Stores overrides for duration, param type, and version
	TABLE_SELECTOR VARCHAR(240),
	DELTA_T INT DEFAULT 0 NOT NULL,
	-- Placeholder
	MODEL_ID INT,
	-- For group comps, this overrides datatype of triggering param
	DATATYPE_ID INT,
	-- If null, default is seconds
	DELTA_T_UNITS VARCHAR(24),
	-- For group comps, this overrides the site selection.
	SITE_ID INT
) WITHOUT OIDS;


CREATE TABLE CP_DEPENDS_NOTIFY
(
	RECORD_NUM INT NOT NULL UNIQUE,
	EVENT_TYPE CHAR NOT NULL,
	KEY INT NOT NULL,
	DATE_TIME_LOADED BIGINT NOT NULL,
	PRIMARY KEY (RECORD_NUM)
) WITHOUT OIDS;


CREATE TABLE DACQ_EVENT
(
	-- Surrogate Key. Events are numbered from 0...MAX
	DACQ_EVENT_ID BIGINT NOT NULL UNIQUE,
	SCHEDULE_ENTRY_STATUS_ID INT,
	PLATFORM_ID INT,
	EVENT_TIME BIGINT NOT NULL,
	-- INFO = 3, WARNING = 4, FAILURE = 5, FATAL = 6
	-- 
	EVENT_PRIORITY INT NOT NULL,
	-- Software subsystem that generated this event
	SUBSYSTEM VARCHAR(24),
	-- If this is related to a message, this holds the message's local_recv_time.
	MSG_RECV_TIME BIGINT,
	EVENT_TEXT VARCHAR(256) NOT NULL,
	LOADING_APPLICATION_ID INT,
	PRIMARY KEY (DACQ_EVENT_ID)
) WITHOUT OIDS;


CREATE TABLE DATAPRESENTATION
(
	ID INT NOT NULL UNIQUE,
	GROUPID INT NOT NULL,
	DATATYPEID INT NOT NULL,
	-- Must match a units abbreviation
	UNITABBR VARCHAR(24),
	EQUIPMENTID INT,
	MAXDECIMALS INT,
	-- Upper limit. Values higher than this are discarded.
	-- Null means no limit.
	MAX_VALUE DOUBLE PRECISION,
	-- Minimum value. Values below this are discarded.
	-- Null means no limit.
	MIN_VALUE DOUBLE PRECISION,
	PRIMARY KEY (ID),
	CONSTRAINT PRES_DT_UNIQUE UNIQUE (GROUPID, DATATYPEID)
) WITHOUT OIDS;


CREATE TABLE DATASOURCE
(
	ID INT NOT NULL UNIQUE,
	NAME VARCHAR(64) NOT NULL UNIQUE,
	-- Must match enum DataSourceType value.
	DATASOURCETYPE VARCHAR(24) NOT NULL,
	-- interpretation depends on the data source type
	DATASOURCEARG VARCHAR(400),
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE DATASOURCEGROUPMEMBER
(
	GROUPID INT NOT NULL,
	-- Determines order of data sources within the group
	SEQUENCENUM INT NOT NULL,
	MEMBERID INT NOT NULL,
	PRIMARY KEY (GROUPID, MEMBERID),
	CONSTRAINT group_seq_unique UNIQUE (GROUPID, SEQUENCENUM),
	CONSTRAINT group_member_unique UNIQUE (GROUPID, MEMBERID)
) WITHOUT OIDS;


CREATE TABLE DATATYPE
(
	ID INT NOT NULL UNIQUE,
	STANDARD VARCHAR(24) NOT NULL,
	CODE VARCHAR(65) NOT NULL,
	-- Used for reports and GUIs.
	DISPLAY_NAME VARCHAR(64),
	PRIMARY KEY (ID),
	CONSTRAINT dt_std_code_unique UNIQUE (STANDARD, CODE)
) WITHOUT OIDS;


-- An entry in this table expresses that two different data types are to be considered equivalent.
CREATE TABLE DATATYPEEQUIVALENCE
(
	ID0 INT NOT NULL,
	ID1 INT NOT NULL,
	PRIMARY KEY (ID0, ID1)
) WITHOUT OIDS;


CREATE TABLE DCP_TRANS_DAY_MAP
(
	TABLE_SUFFIX VARCHAR(4) NOT NULL UNIQUE,
	-- Day 0 = Jan 1, 1970. Null means this suffix not used.
	DAY_NUMBER INT,
	PRIMARY KEY (TABLE_SUFFIX)
) WITHOUT OIDS;


CREATE TABLE DECODESDATABASEVERSION
(
	-- Should be only one record representing the highest numbered version.
	-- For backward compat, sw will only look at max version number.
	VERSION_NUM INT NOT NULL UNIQUE,
	-- Options expressed as comma-separated name=value pairs.
	DB_OPTIONS VARCHAR(400),
	PRIMARY KEY (VERSION_NUM)
) WITHOUT OIDS;


CREATE TABLE DECODESSCRIPT
(
	ID INT NOT NULL UNIQUE,
	CONFIGID INT NOT NULL,
	NAME VARCHAR(64) NOT NULL,
	-- Enumeration value for script type
	SCRIPT_TYPE VARCHAR(24) DEFAULT 'DECODES' NOT NULL,
	-- 'A'=Ascending, 'D'=Descending
	DATAORDER CHAR DEFAULT 'A' NOT NULL,
	PRIMARY KEY (ID),
	CONSTRAINT config_script_name_unique UNIQUE (CONFIGID, NAME)
) WITHOUT OIDS;


CREATE TABLE ENGINEERINGUNIT
(
	-- Standard abbreviation for this unit identifier
	UNITABBR VARCHAR(24) NOT NULL UNIQUE,
	-- Full name
	NAME VARCHAR(64),
	-- Either 'English', 'Metric', or 'Standard'
	FAMILY VARCHAR(24) NOT NULL,
	-- States what physical quantity this unit measures.
	-- E.g. 'ft' measures 'length'
	MEASURES VARCHAR(24) NOT NULL,
	PRIMARY KEY (UNITABBR)
) WITHOUT OIDS;


-- An enumeration
CREATE TABLE ENUM
(
	ID INT NOT NULL UNIQUE,
	-- The name of this enumeration
	NAME VARCHAR(24) NOT NULL UNIQUE,
	-- Null means no default. Else should match one of the values.
	DEFAULTVALUE VARCHAR(24),
	-- Description of what this enumeration is used for
	DESCRIPTION VARCHAR(400),
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE ENUMVALUE
(
	ENUMID INT NOT NULL,
	-- The short, unique enum value. Typically an abreviation.
	ENUMVALUE VARCHAR(24) NOT NULL,
	-- Description of this enum value
	DESCRIPTION VARCHAR(400),
	-- Java class for execution when this enum value is selected
	EXECCLASS VARCHAR(160),
	-- Java class for editing when this enum value is selected.
	EDITCLASS VARCHAR(160),
	-- Order of this value within the enumeration.
	SORTNUMBER INT,
	PRIMARY KEY (ENUMID, ENUMVALUE)
) WITHOUT OIDS;


CREATE TABLE EQUIPMENTMODEL
(
	ID INT NOT NULL UNIQUE,
	NAME VARCHAR(24) NOT NULL UNIQUE,
	COMPANY VARCHAR(64),
	MODEL VARCHAR(64),
	DESCRIPTION VARCHAR(400),
	EQUIPMENTTYPE VARCHAR(24),
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE EQUIPMENTPROPERTY
(
	EQUIPMENTID INT NOT NULL,
	NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	CONSTRAINT equip_prop_name_unique UNIQUE (EQUIPMENTID, NAME)
) WITHOUT OIDS;


CREATE TABLE FORMATSTATEMENT
(
	DECODESSCRIPTID INT NOT NULL,
	-- Determines execution order
	SEQUENCENUM INT NOT NULL,
	-- Statement Label
	LABEL VARCHAR(24) NOT NULL,
	FORMAT VARCHAR(400),
	CONSTRAINT script_sequence_unique UNIQUE (DECODESSCRIPTID, SEQUENCENUM)
) WITHOUT OIDS;


CREATE TABLE HDB_LOADING_APPLICATION
(
	LOADING_APPLICATION_ID INT NOT NULL UNIQUE,
	-- Unique name of this loading app
	LOADING_APPLICATION_NAME VARCHAR(24) NOT NULL UNIQUE,
	-- True if this app does manual editing
	MANUAL_EDIT_APP CHAR(1) DEFAULT 'N' NOT NULL,
	CMMNT VARCHAR(1000),
	PRIMARY KEY (LOADING_APPLICATION_ID)
) WITHOUT OIDS;


CREATE TABLE INTERVAL_CODE
(
	INTERVAL_ID INT NOT NULL UNIQUE,
	-- Interval Name for Display in Pull-Down lists, files, etc.
	NAME VARCHAR(24) NOT NULL UNIQUE,
	-- Java Calendar Constant Name.
	-- One of MINUTE, HOUR_OF_DAY, DAY_OF_MONTH, WEEK_OF_YEAR, MONTH, YEAR
	CAL_CONSTANT VARCHAR(16) NOT NULL,
	-- Multiplier for calendar constant.
	-- Zero means instantaneous.
	CAL_MULTIPLIER INT NOT NULL,
	PRIMARY KEY (INTERVAL_ID)
) WITHOUT OIDS;


-- A network list is a list of platforms, denoted by a transport medium.
CREATE TABLE NETWORKLIST
(
	ID INT NOT NULL UNIQUE,
	NAME VARCHAR(64) NOT NULL UNIQUE,
	-- Must match transport medium type enum value
	TRANSPORTMEDIUMTYPE VARCHAR(24) NOT NULL,
	-- If not null, must match a site name type enum value.
	SITENAMETYPEPREFERENCE VARCHAR(24) NOT NULL,
	LASTMODIFYTIME BIGINT NOT NULL,
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE NETWORKLISTENTRY
(
	NETWORKLISTID INT NOT NULL,
	-- Must match a transport medium id
	TRANSPORTID VARCHAR(64) NOT NULL,
	-- Short mnemonic platform name
	PLATFORM_NAME VARCHAR(64),
	DESCRIPTION VARCHAR(80),
	PRIMARY KEY (NETWORKLISTID, TRANSPORTID),
	CONSTRAINT nl_transport_unique UNIQUE (NETWORKLISTID, TRANSPORTID)
) WITHOUT OIDS;


CREATE TABLE PLATFORM
(
	ID INT NOT NULL UNIQUE,
	-- Agency that owns or controls this platform
	AGENCY VARCHAR(64),
	ISPRODUCTION VARCHAR(5) DEFAULT 'false' NOT NULL,
	SITEID INT,
	CONFIGID INT,
	DESCRIPTION VARCHAR(400),
	LASTMODIFYTIME BIGINT NOT NULL,
	-- If null this platform is not expired (i.e. it is current).
	EXPIRATION BIGINT,
	PLATFORMDESIGNATOR VARCHAR(24),
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE PLATFORMCONFIG
(
	ID INT NOT NULL UNIQUE,
	-- Unique configuration name
	NAME VARCHAR(64) NOT NULL UNIQUE,
	DESCRIPTION VARCHAR(400),
	-- Legacy
	EQUIPMENTID INT,
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE PLATFORMPROPERTY
(
	PLATFORMID INT NOT NULL,
	PROP_NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (PLATFORMID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE PLATFORMSENSOR
(
	PLATFORMID INT NOT NULL,
	SENSORNUMBER INT NOT NULL,
	SITEID INT,
	-- Database Descriptor Number - Legacy field for USGS compatibility
	DD_NU INT,
	PRIMARY KEY (PLATFORMID, SENSORNUMBER)
) WITHOUT OIDS;


CREATE TABLE PLATFORMSENSORPROPERTY
(
	PLATFORMID INT NOT NULL,
	SENSORNUMBER INT NOT NULL,
	PROP_NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240),
	PRIMARY KEY (PLATFORMID, SENSORNUMBER, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE PLATFORM_STATUS
(
	PLATFORM_ID INT NOT NULL UNIQUE,
	-- Time of last station contact, whether or not a message was successfully received.
	LAST_CONTACT_TIME BIGINT,
	-- Time stamp of last message received. This is the message time stamp parsed from the header.
	-- Null means no message ever received.
	LAST_MESSAGE_TIME BIGINT,
	-- Up to 8 failure codes describing data acquisition and decoding.
	LAST_FAILURE_CODES VARCHAR(8),
	-- Null means no errors encountered ever.
	LAST_ERROR_TIME BIGINT,
	-- Points to status of last routing spec / schedule entry run.
	-- Null means that the schedule entry is too old and has been purged.
	LAST_SCHEDULE_ENTRY_STATUS_ID INT,
	ANNOTATION VARCHAR(400),
	PRIMARY KEY (PLATFORM_ID)
) WITHOUT OIDS;


CREATE TABLE PRESENTATIONGROUP
(
	ID INT NOT NULL UNIQUE,
	NAME VARCHAR(64) NOT NULL UNIQUE,
	-- If not null, this refers to the parent group from which this group inherits.
	INHERITSFROM INT,
	LASTMODIFYTIME BIGINT NOT NULL,
	ISPRODUCTION VARCHAR(5) DEFAULT 'FALSE' NOT NULL,
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE REF_LOADING_APPLICATION_PROP
(
	LOADING_APPLICATION_ID INT NOT NULL,
	PROP_NAME VARCHAR(64) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (LOADING_APPLICATION_ID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE ROUNDINGRULE
(
	DATAPRESENTATIONID INT NOT NULL,
	UPPERLIMIT DOUBLE PRECISION NOT NULL,
	SIGDIGITS INT NOT NULL,
	PRIMARY KEY (DATAPRESENTATIONID, UPPERLIMIT)
) WITHOUT OIDS;


CREATE TABLE ROUTINGSPEC
(
	ID INT NOT NULL UNIQUE,
	NAME VARCHAR(64) NOT NULL UNIQUE,
	DATASOURCEID INT NOT NULL,
	-- True to enable in-line equations in this routing spec.
	ENABLEEQUATIONS VARCHAR(5) DEFAULT 'FALSE' NOT NULL,
	-- True to output performance measurements as if they were sensor values.
	USEPERFORMANCEMEASUREMENTS VARCHAR(5) DEFAULT 'FALSE' NOT NULL,
	-- Must match an enum value for output formatter
	OUTPUTFORMAT VARCHAR(24),
	-- Java timezone to format output. If null, default to UTC.
	OUTPUTTIMEZONE VARCHAR(64),
	PRESENTATIONGROUPNAME VARCHAR(64),
	SINCETIME VARCHAR(80),
	UNTILTIME VARCHAR(80),
	-- Must match a consumer type enum value.
	CONSUMERTYPE VARCHAR(24) NOT NULL,
	-- type-dependent argument for the consumer
	CONSUMERARG VARCHAR(400),
	LASTMODIFYTIME BIGINT NOT NULL,
	ISPRODUCTION VARCHAR(5) DEFAULT 'FALSE' NOT NULL,
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE ROUTINGSPECNETWORKLIST
(
	ROUTINGSPECID INT NOT NULL,
	NETWORKLISTNAME VARCHAR(64) NOT NULL,
	PRIMARY KEY (ROUTINGSPECID, NETWORKLISTNAME)
) WITHOUT OIDS;


CREATE TABLE ROUTINGSPECPROPERTY
(
	ROUTINGSPECID INT NOT NULL,
	PROP_NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (ROUTINGSPECID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE SCHEDULE_ENTRY
(
	SCHEDULE_ENTRY_ID INT NOT NULL UNIQUE,
	-- Unique name for this schedule entry.
	NAME VARCHAR(64) NOT NULL UNIQUE,
	-- Can be null for manual routing specs run from 'rs' command line.
	LOADING_APPLICATION_ID INT,
	ROUTINGSPEC_ID INT NOT NULL,
	-- date/time for first execution.
	-- Null means start immediately.
	START_TIME BIGINT,
	-- Used to interpret interval adding to start time.
	TIMEZONE VARCHAR(32),
	-- Any valid interval in this database.
	-- Null means execute one time only.
	RUN_INTERVAL VARCHAR(64),
	-- true or false
	ENABLED VARCHAR(5) NOT NULL,
	LAST_MODIFIED BIGINT NOT NULL,
	PRIMARY KEY (SCHEDULE_ENTRY_ID)
) WITHOUT OIDS;


-- Describes a schedule run.
CREATE TABLE SCHEDULE_ENTRY_STATUS
(
	SCHEDULE_ENTRY_STATUS_ID INT NOT NULL UNIQUE,
	SCHEDULE_ENTRY_ID INT NOT NULL,
	RUN_START_TIME BIGINT NOT NULL,
	-- Null means no messages yet received
	LAST_MESSAGE_TIME BIGINT,
	-- Null means still running.
	RUN_COMPLETE_TIME BIGINT,
	-- Hostname or IP Address of server where the routing spec was run.
	HOSTNAME VARCHAR(64) NOT NULL,
	-- Brief string describing current status: "initializing", "running", "complete", "failed".
	RUN_STATUS VARCHAR(24) NOT NULL,
	-- Number of messages successfully processed during the run.
	NUM_MESSAGES INT DEFAULT 0 NOT NULL,
	-- Number of decoding errors encountered.
	NUM_DECODE_ERRORS INT DEFAULT 0 NOT NULL,
	-- Number of distinct platforms seen
	NUM_PLATFORMS INT DEFAULT 0 NOT NULL,
	LAST_SOURCE VARCHAR(32),
	LAST_CONSUMER VARCHAR(32),
	-- Last time this entry was written to the database.
	LAST_MODIFIED BIGINT NOT NULL,
	PRIMARY KEY (SCHEDULE_ENTRY_STATUS_ID),
	CONSTRAINT sched_entry_start_unique UNIQUE (SCHEDULE_ENTRY_ID, RUN_START_TIME)
) WITHOUT OIDS;


CREATE TABLE SCRIPTSENSOR
(
	DECODESSCRIPTID INT NOT NULL,
	SENSORNUMBER INT NOT NULL,
	UNITCONVERTERID INT NOT NULL UNIQUE,
	PRIMARY KEY (DECODESSCRIPTID, SENSORNUMBER)
) WITHOUT OIDS;


CREATE TABLE SERIAL_PORT_STATUS
(
	-- Combo of DigiHostName:PortNumber
	PORT_NAME VARCHAR(48) NOT NULL,
	-- True when port is locked.
	IN_USE VARCHAR(5) DEFAULT 'FALSE' NOT NULL,
	-- Name of routing spec (or other process) that last used (or is currently using) the port.
	-- Null means never been used.
	LAST_USED_BY_PROC VARCHAR(64),
	-- Hostname or IP Address from which this port was last used (or is currently being used).
	-- Null means never been used.
	LAST_USED_BY_HOST VARCHAR(64),
	-- Java msec Date/Time this port was last used.
	LAST_ACTIVITY_TIME BIGINT,
	-- Java msec Date/Time that a message was successfully received on this port.
	LAST_RECEIVE_TIME BIGINT,
	-- The Medium ID (e.g. logger name) from which a message was last received on this port.
	LAST_MEDIUM_ID VARCHAR(64),
	-- Java msec Date/Time of the last time an error occurred on this port.
	LAST_ERROR_TIME BIGINT,
	-- Short string. Usually one of the following:
	-- idle, dialing, login, receiving, goodbye, error
	PORT_STATUS VARCHAR(32),
	PRIMARY KEY (PORT_NAME)
) WITHOUT OIDS;


CREATE TABLE SITE
(
	ID INT NOT NULL UNIQUE,
	LATITUDE VARCHAR(24),
	LONGITUDE VARCHAR(24),
	NEARESTCITY VARCHAR(64),
	STATE VARCHAR(24),
	REGION VARCHAR(64),
	TIMEZONE VARCHAR(64),
	COUNTRY VARCHAR(64),
	ELEVATION DOUBLE PRECISION,
	ELEVUNITABBR VARCHAR(24) DEFAULT 'ft' NOT NULL,
	DESCRIPTION VARCHAR(800),
	ACTIVE_FLAG VARCHAR(5) DEFAULT 'TRUE' NOT NULL,
	LOCATION_TYPE VARCHAR(32),
	MODIFY_TIME BIGINT NOT NULL,
	PUBLIC_NAME VARCHAR(64),
	PRIMARY KEY (ID)
) WITHOUT OIDS;


CREATE TABLE SITENAME
(
	SITEID INT NOT NULL,
	-- Must match one of the Enumerated Site Name Types
	NAMETYPE VARCHAR(24) NOT NULL,
	-- Combination (location.office_code, nameType, siteName) must be unique
	SITENAME VARCHAR(64) NOT NULL,
	-- For USGS compatibility
	DBNUM VARCHAR(2),
	-- For USGS Compatibility
	AGENCY_CD VARCHAR(5),
	PRIMARY KEY (SITEID, NAMETYPE)
) WITHOUT OIDS;


CREATE TABLE SITE_PROPERTY
(
	SITE_ID INT NOT NULL,
	PROP_NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (SITE_ID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE STORAGE_TABLE_LIST
(
	-- Table number is a 4-digit suffix.
	TABLE_NUM INT NOT NULL,
	STORAGE_TYPE CHAR DEFAULT 'N' NOT NULL,
	NUM_TS_PRESENT INT DEFAULT 0 NOT NULL,
	-- Estimated number of annual values for all time series using this table.
	EST_ANNUAL_VALUES INT DEFAULT 0 NOT NULL,
	PRIMARY KEY (TABLE_NUM, STORAGE_TYPE)
) WITHOUT OIDS;


CREATE TABLE TRANSPORTMEDIUM
(
	PLATFORMID INT NOT NULL,
	MEDIUMTYPE VARCHAR(24) NOT NULL,
	MEDIUMID VARCHAR(64) NOT NULL,
	-- Script to use to decode data from this TM
	SCRIPTNAME VARCHAR(64),
	-- Channel number for GOES transport media
	CHANNELNUM INT,
	-- Second of day of first transmission, UTC.
	ASSIGNEDTIME INT,
	-- Length in seconds of transmit window
	TRANSMITWINDOW INT,
	-- Interval in seconds between transmissions
	TRANSMITINTERVAL INT,
	-- Legacy - not used
	EQUIPMENTID INT,
	-- # of seconds to add to each transmit time from this TM
	TIMEADJUSTMENT INT,
	-- L=long, S=Short for GOES
	PREAMBLE CHAR,
	-- Java time zone name used to parse date/time values that are in the message.
	-- This doesn't count time parsed from a message header which are usually in a known TZ.
	TIMEZONE VARCHAR(64),
	LOGGERTYPE VARCHAR(24),
	BAUD INT,
	STOPBITS INT,
	PARITY VARCHAR(1),
	DATABITS INT,
	-- TRUE or FALSE
	DOLOGIN VARCHAR(5),
	USERNAME VARCHAR(32),
	PASSWORD VARCHAR(32),
	PRIMARY KEY (PLATFORMID, MEDIUMTYPE)
) WITHOUT OIDS;


-- There should be a single row in this table. When schema is updated, the old row should be removed.
CREATE TABLE TSDB_DATABASE_VERSION
(
	DB_VERSION INT NOT NULL UNIQUE,
	DESCRIPTION VARCHAR(400) NOT NULL,
	PRIMARY KEY (DB_VERSION)
) WITHOUT OIDS;


CREATE TABLE TSDB_DATA_SOURCE
(
	SOURCE_ID INT NOT NULL UNIQUE,
	LOADING_APPLICATION_ID INT NOT NULL,
	-- Further describes source: If DECODES routing spec, this should be the rs and ds names.
	-- If manual entry, this is user name
	-- If computation, this is comp name
	-- If modeled, this is the model name, etc.
	MODULE VARCHAR(120),
	PRIMARY KEY (SOURCE_ID)
) WITHOUT OIDS;


CREATE TABLE TSDB_GROUP
(
	GROUP_ID INT NOT NULL UNIQUE,
	GROUP_NAME VARCHAR(64) NOT NULL UNIQUE,
	-- Must match a group_type enumeration value.
	GROUP_TYPE VARCHAR(24) NOT NULL,
	GROUP_DESCRIPTION VARCHAR(1000),
	PRIMARY KEY (GROUP_ID)
) WITHOUT OIDS;


CREATE TABLE TSDB_GROUP_MEMBER_DT
(
	GROUP_ID INT NOT NULL,
	DATA_TYPE_ID INT NOT NULL,
	PRIMARY KEY (GROUP_ID, DATA_TYPE_ID)
) WITHOUT OIDS;


CREATE TABLE TSDB_GROUP_MEMBER_GROUP
(
	PARENT_GROUP_ID INT NOT NULL,
	CHILD_GROUP_ID INT NOT NULL,
	-- How to combine child with parent: A=Add, S=Subtract, I=Intersect
	INCLUDE_GROUP CHAR DEFAULT 'A' NOT NULL,
	PRIMARY KEY (PARENT_GROUP_ID, CHILD_GROUP_ID)
) WITHOUT OIDS;


CREATE TABLE TSDB_GROUP_MEMBER_OTHER
(
	GROUP_ID INT NOT NULL,
	-- Must match one of the database's underlying TS ID Parts.
	MEMBER_TYPE VARCHAR(24) NOT NULL,
	MEMBER_VALUE VARCHAR(240) NOT NULL
) WITHOUT OIDS;


CREATE TABLE TSDB_GROUP_MEMBER_SITE
(
	GROUP_ID INT NOT NULL,
	SITE_ID INT NOT NULL,
	PRIMARY KEY (GROUP_ID, SITE_ID)
) WITHOUT OIDS;


CREATE TABLE TSDB_GROUP_MEMBER_TS
(
	GROUP_ID INT NOT NULL,
	TS_ID INT NOT NULL,
	PRIMARY KEY (GROUP_ID, TS_ID)
) WITHOUT OIDS;


-- Global properties on the database components.
CREATE TABLE TSDB_PROPERTY
(
	PROP_NAME VARCHAR(24) NOT NULL UNIQUE,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE TS_ANNOTATION
(
	ANNOTATION_ID INT NOT NULL UNIQUE,
	TS_ID INT NOT NULL,
	START_TIME BIGINT NOT NULL,
	END_TIME BIGINT NOT NULL,
	ANNOTATION_TEXT VARCHAR(1000) NOT NULL,
	PRIMARY KEY (ANNOTATION_ID)
) WITHOUT OIDS;


CREATE TABLE TS_NUM_0000
(
	TS_ID INT NOT NULL,
	SAMPLE_TIME BIGINT NOT NULL,
	TS_VALUE DOUBLE PRECISION NOT NULL,
	-- Bitwise flags for each value
	FLAGS BIGINT NOT NULL,
	SOURCE_ID INT NOT NULL,
	DATA_ENTRY_TIME BIGINT NOT NULL,
	PRIMARY KEY (TS_ID, SAMPLE_TIME)
) WITHOUT OIDS;


CREATE TABLE TS_PROPERTY
(
	TS_ID INT NOT NULL,
	PROP_NAME VARCHAR(24) NOT NULL,
	PROP_VALUE VARCHAR(240) NOT NULL,
	PRIMARY KEY (TS_ID, PROP_NAME)
) WITHOUT OIDS;


CREATE TABLE TS_SPEC
(
	TS_ID INT NOT NULL UNIQUE,
	SITE_ID INT NOT NULL,
	DATATYPE_ID INT NOT NULL,
	STATISTICS_CODE VARCHAR(24) NOT NULL,
	INTERVAL_ID INT NOT NULL,
	DURATION_ID INT NOT NULL,
	TS_VERSION VARCHAR(32) NOT NULL,
	ACTIVE_FLAG VARCHAR(5) DEFAULT 'TRUE' NOT NULL,
	STORAGE_UNITS VARCHAR(24) NOT NULL,
	-- Number of data storage table where values for this TS are stored.
	STORAGE_TABLE INT NOT NULL,
	-- 'N' for numeric, 'S' for String.
	STORAGE_TYPE CHAR DEFAULT 'N' NOT NULL,
	-- Last Modify Time for this record, stored as Java msec time value UTC.
	MODIFY_TIME BIGINT NOT NULL,
	DESCRIPTION VARCHAR(400),
	-- Initially set to NULL. After first ts value written, this is set to number of seconds.
	-- 
	UTC_OFFSET INT,
	-- NULL = use default in TSDB_PROPERTIES, TRUE=allow, FALSE=disallow
	ALLOW_DST_OFFSET_VARIATION VARCHAR(5),
	-- NULL=use default in TSDB_PROPERTIES, ROUND, REJECT, or IGNORE
	OFFSET_ERROR_ACTION VARCHAR(24),
	PRIMARY KEY (TS_ID),
	CONSTRAINT time_series_identifier_unique UNIQUE (SITE_ID, DATATYPE_ID, STATISTICS_CODE, INTERVAL_ID, DURATION_ID, TS_VERSION)
) WITHOUT OIDS;


CREATE TABLE TS_STRING_0000
(
	TS_ID INT NOT NULL,
	SAMPLE_TIME BIGINT NOT NULL,
	TS_VALUE VARCHAR(64) NOT NULL,
	FLAGS BIGINT NOT NULL,
	SOURCE_ID INT NOT NULL,
	DATA_ENTRY_TIME BIGINT NOT NULL,
	PRIMARY KEY (TS_ID, SAMPLE_TIME)
) WITHOUT OIDS;


CREATE TABLE UNITCONVERTER
(
	ID INT NOT NULL UNIQUE,
	-- Standard abbreviation for this unit identifier
	FROMUNITSABBR VARCHAR(24) NOT NULL,
	-- Standard abbreviation for this unit identifier
	TOUNITSABBR VARCHAR(24) NOT NULL,
	ALGORITHM VARCHAR(24) NOT NULL,
	A DOUBLE PRECISION,
	B DOUBLE PRECISION,
	C DOUBLE PRECISION,
	D DOUBLE PRECISION,
	E DOUBLE PRECISION,
	F DOUBLE PRECISION,
	PRIMARY KEY (ID)
) WITHOUT OIDS;



/* Create Foreign Keys */

ALTER TABLE CONFIGSENSORPROPERTY
	ADD FOREIGN KEY (CONFIGID, SENSORNUMBER)
	REFERENCES CONFIGSENSOR (CONFIGID, SENSORNUMBER)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CONFIGSENSORDATATYPE
	ADD FOREIGN KEY (CONFIGID, SENSORNUMBER)
	REFERENCES CONFIGSENSOR (CONFIGID, SENSORNUMBER)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_ALGO_PROPERTY
	ADD FOREIGN KEY (ALGORITHM_ID)
	REFERENCES CP_ALGORITHM (ALGORITHM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMPUTATION
	ADD FOREIGN KEY (ALGORITHM_ID)
	REFERENCES CP_ALGORITHM (ALGORITHM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_ALGO_SCRIPT
	ADD FOREIGN KEY (ALGORITHM_ID)
	REFERENCES CP_ALGORITHM (ALGORITHM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_ALGO_TS_PARM
	ADD FOREIGN KEY (ALGORITHM_ID)
	REFERENCES CP_ALGORITHM (ALGORITHM_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_PROPERTY
	ADD FOREIGN KEY (COMPUTATION_ID)
	REFERENCES CP_COMPUTATION (COMPUTATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_DEPENDS_SCRATCHPAD
	ADD FOREIGN KEY (COMPUTATION_ID)
	REFERENCES CP_COMPUTATION (COMPUTATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TS_PARM
	ADD FOREIGN KEY (COMPUTATION_ID)
	REFERENCES CP_COMPUTATION (COMPUTATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_DEPENDS
	ADD FOREIGN KEY (COMPUTATION_ID)
	REFERENCES CP_COMPUTATION (COMPUTATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ROUNDINGRULE
	ADD FOREIGN KEY (DATAPRESENTATIONID)
	REFERENCES DATAPRESENTATION (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ROUTINGSPEC
	ADD FOREIGN KEY (DATASOURCEID)
	REFERENCES DATASOURCE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATASOURCEGROUPMEMBER
	ADD FOREIGN KEY (GROUPID)
	REFERENCES DATASOURCE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATASOURCEGROUPMEMBER
	ADD FOREIGN KEY (MEMBERID)
	REFERENCES DATASOURCE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATATYPEEQUIVALENCE
	ADD FOREIGN KEY (ID0)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CONFIGSENSORDATATYPE
	ADD FOREIGN KEY (DATATYPEID)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TS_PARM
	ADD FOREIGN KEY (DATATYPE_ID)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATAPRESENTATION
	ADD FOREIGN KEY (DATATYPEID)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_SPEC
	ADD FOREIGN KEY (DATATYPE_ID)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_DT
	ADD FOREIGN KEY (DATA_TYPE_ID)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATATYPEEQUIVALENCE
	ADD FOREIGN KEY (ID1)
	REFERENCES DATATYPE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCRIPTSENSOR
	ADD FOREIGN KEY (DECODESSCRIPTID)
	REFERENCES DECODESSCRIPT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FORMATSTATEMENT
	ADD FOREIGN KEY (DECODESSCRIPTID)
	REFERENCES DECODESSCRIPT (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ENUMVALUE
	ADD FOREIGN KEY (ENUMID)
	REFERENCES ENUM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATAPRESENTATION
	ADD FOREIGN KEY (EQUIPMENTID)
	REFERENCES EQUIPMENTMODEL (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE EQUIPMENTPROPERTY
	ADD FOREIGN KEY (EQUIPMENTID)
	REFERENCES EQUIPMENTMODEL (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCHEDULE_ENTRY
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_PROC_LOCK
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REF_LOADING_APPLICATION_PROP
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_DATA_SOURCE
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TASKLIST
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DACQ_EVENT
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMPUTATION
	ADD FOREIGN KEY (LOADING_APPLICATION_ID)
	REFERENCES HDB_LOADING_APPLICATION (LOADING_APPLICATION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_SPEC
	ADD FOREIGN KEY (DURATION_ID)
	REFERENCES INTERVAL_CODE (INTERVAL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_SPEC
	ADD FOREIGN KEY (INTERVAL_ID)
	REFERENCES INTERVAL_CODE (INTERVAL_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE NETWORKLISTENTRY
	ADD FOREIGN KEY (NETWORKLISTID)
	REFERENCES NETWORKLIST (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORM_STATUS
	ADD FOREIGN KEY (PLATFORM_ID)
	REFERENCES PLATFORM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TRANSPORTMEDIUM
	ADD FOREIGN KEY (PLATFORMID)
	REFERENCES PLATFORM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DACQ_EVENT
	ADD FOREIGN KEY (PLATFORM_ID)
	REFERENCES PLATFORM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORMSENSOR
	ADD FOREIGN KEY (PLATFORMID)
	REFERENCES PLATFORM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORMPROPERTY
	ADD FOREIGN KEY (PLATFORMID)
	REFERENCES PLATFORM (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORM
	ADD FOREIGN KEY (CONFIGID)
	REFERENCES PLATFORMCONFIG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DECODESSCRIPT
	ADD FOREIGN KEY (CONFIGID)
	REFERENCES PLATFORMCONFIG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CONFIGSENSOR
	ADD FOREIGN KEY (CONFIGID)
	REFERENCES PLATFORMCONFIG (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORMSENSORPROPERTY
	ADD FOREIGN KEY (PLATFORMID, SENSORNUMBER)
	REFERENCES PLATFORMSENSOR (PLATFORMID, SENSORNUMBER)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PRESENTATIONGROUP
	ADD FOREIGN KEY (INHERITSFROM)
	REFERENCES PRESENTATIONGROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DATAPRESENTATION
	ADD FOREIGN KEY (GROUPID)
	REFERENCES PRESENTATIONGROUP (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCHEDULE_ENTRY
	ADD FOREIGN KEY (ROUTINGSPEC_ID)
	REFERENCES ROUTINGSPEC (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ROUTINGSPECPROPERTY
	ADD FOREIGN KEY (ROUTINGSPECID)
	REFERENCES ROUTINGSPEC (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ROUTINGSPECNETWORKLIST
	ADD FOREIGN KEY (ROUTINGSPECID)
	REFERENCES ROUTINGSPEC (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCHEDULE_ENTRY_STATUS
	ADD FOREIGN KEY (SCHEDULE_ENTRY_ID)
	REFERENCES SCHEDULE_ENTRY (SCHEDULE_ENTRY_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORM_STATUS
	ADD FOREIGN KEY (LAST_SCHEDULE_ENTRY_STATUS_ID)
	REFERENCES SCHEDULE_ENTRY_STATUS (SCHEDULE_ENTRY_STATUS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DACQ_EVENT
	ADD FOREIGN KEY (SCHEDULE_ENTRY_STATUS_ID)
	REFERENCES SCHEDULE_ENTRY_STATUS (SCHEDULE_ENTRY_STATUS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SITE_PROPERTY
	ADD FOREIGN KEY (SITE_ID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SITENAME
	ADD FOREIGN KEY (SITEID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TS_PARM
	ADD FOREIGN KEY (SITE_ID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_SITE
	ADD FOREIGN KEY (SITE_ID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_SPEC
	ADD FOREIGN KEY (SITE_ID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORM
	ADD FOREIGN KEY (SITEID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PLATFORMSENSOR
	ADD FOREIGN KEY (SITEID)
	REFERENCES SITE (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_STRING_0000
	ADD FOREIGN KEY (SOURCE_ID)
	REFERENCES TSDB_DATA_SOURCE (SOURCE_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TASKLIST
	ADD FOREIGN KEY (SOURCE_ID)
	REFERENCES TSDB_DATA_SOURCE (SOURCE_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_NUM_0000
	ADD FOREIGN KEY (SOURCE_ID)
	REFERENCES TSDB_DATA_SOURCE (SOURCE_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_DT
	ADD FOREIGN KEY (GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_SITE
	ADD FOREIGN KEY (GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_GROUP
	ADD FOREIGN KEY (CHILD_GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_OTHER
	ADD FOREIGN KEY (GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_GROUP
	ADD FOREIGN KEY (PARENT_GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMPUTATION
	ADD FOREIGN KEY (GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_TS
	ADD FOREIGN KEY (GROUP_ID)
	REFERENCES TSDB_GROUP (GROUP_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_NUM_0000
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_ANNOTATION
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_DEPENDS_SCRATCHPAD
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TSDB_GROUP_MEMBER_TS
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_STRING_0000
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TASKLIST
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_TS_PARM
	ADD FOREIGN KEY (SITE_DATATYPE_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TS_PROPERTY
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CP_COMP_DEPENDS
	ADD FOREIGN KEY (TS_ID)
	REFERENCES TS_SPEC (TS_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SCRIPTSENSOR
	ADD FOREIGN KEY (UNITCONVERTERID)
	REFERENCES UNITCONVERTER (ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



/* Create Indexes */

CREATE INDEX EVT_PLATFORM_ID_IDX ON DACQ_EVENT USING BTREE (PLATFORM_ID);
CREATE INDEX EVT_PLAT_MSG_IDX ON DACQ_EVENT (PLATFORM_ID, MSG_RECV_TIME);
CREATE INDEX EVT_SCHED_IDX ON DACQ_EVENT (SCHEDULE_ENTRY_STATUS_ID);
CREATE INDEX EVT_TIME_IDX ON DACQ_EVENT (EVENT_TIME);



/* Comments */

COMMENT ON COLUMN CONFIGSENSOR.SENSORNUMBER IS 'Ordinal number of this sensor within this configuration';
COMMENT ON COLUMN CONFIGSENSOR.RECORDINGINTERVAL IS '# seconds between samples taken on the platform.';
COMMENT ON COLUMN CONFIGSENSOR.TIMEOFFIRSTSAMPLE IS 'Second of day of first sample taken on the platform.
Used for auto time-tagging.';
COMMENT ON COLUMN CONFIGSENSOR.EQUIPMENTID IS 'legacy not used';
COMMENT ON COLUMN CONFIGSENSOR.ABSOLUTEMIN IS 'If not null, values below this are tossed.';
COMMENT ON COLUMN CONFIGSENSOR.ABSOLUTEMAX IS 'If not null, values above this are tossed.';
COMMENT ON COLUMN CONFIGSENSOR.STAT_CD IS 'Used by USGS';
COMMENT ON COLUMN CONFIGSENSORDATATYPE.SENSORNUMBER IS 'Ordinal number of this sensor within this configuration';
COMMENT ON COLUMN CONFIGSENSORPROPERTY.SENSORNUMBER IS 'Ordinal number of this sensor within this configuration';
COMMENT ON COLUMN CP_ALGORITHM.EXEC_CLASS IS 'May be null for pseudo or placeholder algorithms';
COMMENT ON COLUMN CP_ALGO_SCRIPT.SCRIPT_TYPE IS 'B=Before, T=timeslice, A=After. Other chars are reserved.';
COMMENT ON COLUMN CP_COMPUTATION.EFFECTIVE_START_DATE_TIME IS 'Null means goes to the beggining of time.';
COMMENT ON COLUMN CP_COMPUTATION.EFFECTIVE_END_DATE_TIME IS 'Null means never expires';
COMMENT ON TABLE CP_COMP_DEPENDS IS 'An entry in this table asserts that a time series is an input to a given computation.
The computation processor uses it to determine which computations to execute for a given input.';
COMMENT ON COLUMN CP_COMP_TASKLIST.NUM_VALUE IS 'Numeric value of the sample, or null if delete or this is a text value.';
COMMENT ON COLUMN CP_COMP_TASKLIST.TXT_VALUE IS 'Text value of the sample, or null if this is numeric or a deletion';
COMMENT ON COLUMN CP_COMP_TASKLIST.DATE_TIME_LOADED IS 'Time that this tasklist record was created';
COMMENT ON COLUMN CP_COMP_TASKLIST.SAMPLE_TIME IS 'Time of the data sample';
COMMENT ON COLUMN CP_COMP_TASKLIST.FAIL_TIME IS 'Null for normal data, if a comp fails, it remains in the tasklist for a finite amount of time.';
COMMENT ON COLUMN CP_COMP_TS_PARM.SITE_DATATYPE_ID IS 'Only for non-group comps where the TS is completely specified.';
COMMENT ON COLUMN CP_COMP_TS_PARM.INTERVAL_ABBR IS 'Must be either null or match a valid interval code';
COMMENT ON COLUMN CP_COMP_TS_PARM.TABLE_SELECTOR IS 'Stores overrides for duration, param type, and version';
COMMENT ON COLUMN CP_COMP_TS_PARM.MODEL_ID IS 'Placeholder';
COMMENT ON COLUMN CP_COMP_TS_PARM.DATATYPE_ID IS 'For group comps, this overrides datatype of triggering param';
COMMENT ON COLUMN CP_COMP_TS_PARM.DELTA_T_UNITS IS 'If null, default is seconds';
COMMENT ON COLUMN CP_COMP_TS_PARM.SITE_ID IS 'For group comps, this overrides the site selection.';
COMMENT ON COLUMN DACQ_EVENT.DACQ_EVENT_ID IS 'Surrogate Key. Events are numbered from 0...MAX';
COMMENT ON COLUMN DACQ_EVENT.EVENT_PRIORITY IS 'INFO = 3, WARNING = 4, FAILURE = 5, FATAL = 6
';
COMMENT ON COLUMN DACQ_EVENT.SUBSYSTEM IS 'Software subsystem that generated this event';
COMMENT ON COLUMN DACQ_EVENT.MSG_RECV_TIME IS 'If this is related to a message, this holds the message''s local_recv_time.';
COMMENT ON COLUMN DATAPRESENTATION.UNITABBR IS 'Must match a units abbreviation';
COMMENT ON COLUMN DATAPRESENTATION.MAX_VALUE IS 'Upper limit. Values higher than this are discarded.
Null means no limit.';
COMMENT ON COLUMN DATAPRESENTATION.MIN_VALUE IS 'Minimum value. Values below this are discarded.
Null means no limit.';
COMMENT ON COLUMN DATASOURCE.DATASOURCETYPE IS 'Must match enum DataSourceType value.';
COMMENT ON COLUMN DATASOURCE.DATASOURCEARG IS 'interpretation depends on the data source type';
COMMENT ON COLUMN DATASOURCEGROUPMEMBER.SEQUENCENUM IS 'Determines order of data sources within the group';
COMMENT ON COLUMN DATATYPE.DISPLAY_NAME IS 'Used for reports and GUIs.';
COMMENT ON TABLE DATATYPEEQUIVALENCE IS 'An entry in this table expresses that two different data types are to be considered equivalent.';
COMMENT ON COLUMN DCP_TRANS_DAY_MAP.DAY_NUMBER IS 'Day 0 = Jan 1, 1970. Null means this suffix not used.';
COMMENT ON COLUMN DECODESDATABASEVERSION.VERSION_NUM IS 'Should be only one record representing the highest numbered version.
For backward compat, sw will only look at max version number.';
COMMENT ON COLUMN DECODESDATABASEVERSION.DB_OPTIONS IS 'Options expressed as comma-separated name=value pairs.';
COMMENT ON COLUMN DECODESSCRIPT.SCRIPT_TYPE IS 'Enumeration value for script type';
COMMENT ON COLUMN DECODESSCRIPT.DATAORDER IS '''A''=Ascending, ''D''=Descending';
COMMENT ON COLUMN ENGINEERINGUNIT.UNITABBR IS 'Standard abbreviation for this unit identifier';
COMMENT ON COLUMN ENGINEERINGUNIT.NAME IS 'Full name';
COMMENT ON COLUMN ENGINEERINGUNIT.FAMILY IS 'Either ''English'', ''Metric'', or ''Standard''';
COMMENT ON COLUMN ENGINEERINGUNIT.MEASURES IS 'States what physical quantity this unit measures.
E.g. ''ft'' measures ''length''';
COMMENT ON TABLE ENUM IS 'An enumeration';
COMMENT ON COLUMN ENUM.NAME IS 'The name of this enumeration';
COMMENT ON COLUMN ENUM.DEFAULTVALUE IS 'Null means no default. Else should match one of the values.';
COMMENT ON COLUMN ENUM.DESCRIPTION IS 'Description of what this enumeration is used for';
COMMENT ON COLUMN ENUMVALUE.ENUMVALUE IS 'The short, unique enum value. Typically an abreviation.';
COMMENT ON COLUMN ENUMVALUE.DESCRIPTION IS 'Description of this enum value';
COMMENT ON COLUMN ENUMVALUE.EXECCLASS IS 'Java class for execution when this enum value is selected';
COMMENT ON COLUMN ENUMVALUE.EDITCLASS IS 'Java class for editing when this enum value is selected.';
COMMENT ON COLUMN ENUMVALUE.SORTNUMBER IS 'Order of this value within the enumeration.';
COMMENT ON COLUMN FORMATSTATEMENT.SEQUENCENUM IS 'Determines execution order';
COMMENT ON COLUMN FORMATSTATEMENT.LABEL IS 'Statement Label';
COMMENT ON COLUMN HDB_LOADING_APPLICATION.LOADING_APPLICATION_NAME IS 'Unique name of this loading app';
COMMENT ON COLUMN HDB_LOADING_APPLICATION.MANUAL_EDIT_APP IS 'True if this app does manual editing';
COMMENT ON COLUMN INTERVAL_CODE.NAME IS 'Interval Name for Display in Pull-Down lists, files, etc.';
COMMENT ON COLUMN INTERVAL_CODE.CAL_CONSTANT IS 'Java Calendar Constant Name.
One of MINUTE, HOUR_OF_DAY, DAY_OF_MONTH, WEEK_OF_YEAR, MONTH, YEAR';
COMMENT ON COLUMN INTERVAL_CODE.CAL_MULTIPLIER IS 'Multiplier for calendar constant.
Zero means instantaneous.';
COMMENT ON TABLE NETWORKLIST IS 'A network list is a list of platforms, denoted by a transport medium.';
COMMENT ON COLUMN NETWORKLIST.TRANSPORTMEDIUMTYPE IS 'Must match transport medium type enum value';
COMMENT ON COLUMN NETWORKLIST.SITENAMETYPEPREFERENCE IS 'If not null, must match a site name type enum value.';
COMMENT ON COLUMN NETWORKLISTENTRY.TRANSPORTID IS 'Must match a transport medium id';
COMMENT ON COLUMN NETWORKLISTENTRY.PLATFORM_NAME IS 'Short mnemonic platform name';
COMMENT ON COLUMN PLATFORM.AGENCY IS 'Agency that owns or controls this platform';
COMMENT ON COLUMN PLATFORM.EXPIRATION IS 'If null this platform is not expired (i.e. it is current).';
COMMENT ON COLUMN PLATFORMCONFIG.NAME IS 'Unique configuration name';
COMMENT ON COLUMN PLATFORMCONFIG.EQUIPMENTID IS 'Legacy';
COMMENT ON COLUMN PLATFORMSENSOR.DD_NU IS 'Database Descriptor Number - Legacy field for USGS compatibility';
COMMENT ON COLUMN PLATFORM_STATUS.LAST_CONTACT_TIME IS 'Time of last station contact, whether or not a message was successfully received.';
COMMENT ON COLUMN PLATFORM_STATUS.LAST_MESSAGE_TIME IS 'Time stamp of last message received. This is the message time stamp parsed from the header.
Null means no message ever received.';
COMMENT ON COLUMN PLATFORM_STATUS.LAST_FAILURE_CODES IS 'Up to 8 failure codes describing data acquisition and decoding.';
COMMENT ON COLUMN PLATFORM_STATUS.LAST_ERROR_TIME IS 'Null means no errors encountered ever.';
COMMENT ON COLUMN PLATFORM_STATUS.LAST_SCHEDULE_ENTRY_STATUS_ID IS 'Points to status of last routing spec / schedule entry run.
Null means that the schedule entry is too old and has been purged.';
COMMENT ON COLUMN PRESENTATIONGROUP.INHERITSFROM IS 'If not null, this refers to the parent group from which this group inherits.';
COMMENT ON COLUMN ROUTINGSPEC.ENABLEEQUATIONS IS 'True to enable in-line equations in this routing spec.';
COMMENT ON COLUMN ROUTINGSPEC.USEPERFORMANCEMEASUREMENTS IS 'True to output performance measurements as if they were sensor values.';
COMMENT ON COLUMN ROUTINGSPEC.OUTPUTFORMAT IS 'Must match an enum value for output formatter';
COMMENT ON COLUMN ROUTINGSPEC.OUTPUTTIMEZONE IS 'Java timezone to format output. If null, default to UTC.';
COMMENT ON COLUMN ROUTINGSPEC.CONSUMERTYPE IS 'Must match a consumer type enum value.';
COMMENT ON COLUMN ROUTINGSPEC.CONSUMERARG IS 'type-dependent argument for the consumer';
COMMENT ON COLUMN SCHEDULE_ENTRY.NAME IS 'Unique name for this schedule entry.';
COMMENT ON COLUMN SCHEDULE_ENTRY.LOADING_APPLICATION_ID IS 'Can be null for manual routing specs run from ''rs'' command line.';
COMMENT ON COLUMN SCHEDULE_ENTRY.START_TIME IS 'date/time for first execution.
Null means start immediately.';
COMMENT ON COLUMN SCHEDULE_ENTRY.TIMEZONE IS 'Used to interpret interval adding to start time.';
COMMENT ON COLUMN SCHEDULE_ENTRY.RUN_INTERVAL IS 'Any valid interval in this database.
Null means execute one time only.';
COMMENT ON COLUMN SCHEDULE_ENTRY.ENABLED IS 'true or false';
COMMENT ON TABLE SCHEDULE_ENTRY_STATUS IS 'Describes a schedule run.';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.LAST_MESSAGE_TIME IS 'Null means no messages yet received';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.RUN_COMPLETE_TIME IS 'Null means still running.';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.HOSTNAME IS 'Hostname or IP Address of server where the routing spec was run.';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.RUN_STATUS IS 'Brief string describing current status: "initializing", "running", "complete", "failed".';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.NUM_MESSAGES IS 'Number of messages successfully processed during the run.';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.NUM_DECODE_ERRORS IS 'Number of decoding errors encountered.';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.NUM_PLATFORMS IS 'Number of distinct platforms seen';
COMMENT ON COLUMN SCHEDULE_ENTRY_STATUS.LAST_MODIFIED IS 'Last time this entry was written to the database.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.PORT_NAME IS 'Combo of DigiHostName:PortNumber';
COMMENT ON COLUMN SERIAL_PORT_STATUS.IN_USE IS 'True when port is locked.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.LAST_USED_BY_PROC IS 'Name of routing spec (or other process) that last used (or is currently using) the port.
Null means never been used.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.LAST_USED_BY_HOST IS 'Hostname or IP Address from which this port was last used (or is currently being used).
Null means never been used.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.LAST_ACTIVITY_TIME IS 'Java msec Date/Time this port was last used.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.LAST_RECEIVE_TIME IS 'Java msec Date/Time that a message was successfully received on this port.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.LAST_MEDIUM_ID IS 'The Medium ID (e.g. logger name) from which a message was last received on this port.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.LAST_ERROR_TIME IS 'Java msec Date/Time of the last time an error occurred on this port.';
COMMENT ON COLUMN SERIAL_PORT_STATUS.PORT_STATUS IS 'Short string. Usually one of the following:
idle, dialing, login, receiving, goodbye, error';
COMMENT ON COLUMN SITENAME.NAMETYPE IS 'Must match one of the Enumerated Site Name Types';
COMMENT ON COLUMN SITENAME.SITENAME IS 'Combination (location.office_code, nameType, siteName) must be unique';
COMMENT ON COLUMN SITENAME.DBNUM IS 'For USGS compatibility';
COMMENT ON COLUMN SITENAME.AGENCY_CD IS 'For USGS Compatibility';
COMMENT ON COLUMN STORAGE_TABLE_LIST.TABLE_NUM IS 'Table number is a 4-digit suffix.';
COMMENT ON COLUMN STORAGE_TABLE_LIST.EST_ANNUAL_VALUES IS 'Estimated number of annual values for all time series using this table.';
COMMENT ON COLUMN TRANSPORTMEDIUM.SCRIPTNAME IS 'Script to use to decode data from this TM';
COMMENT ON COLUMN TRANSPORTMEDIUM.CHANNELNUM IS 'Channel number for GOES transport media';
COMMENT ON COLUMN TRANSPORTMEDIUM.ASSIGNEDTIME IS 'Second of day of first transmission, UTC.';
COMMENT ON COLUMN TRANSPORTMEDIUM.TRANSMITWINDOW IS 'Length in seconds of transmit window';
COMMENT ON COLUMN TRANSPORTMEDIUM.TRANSMITINTERVAL IS 'Interval in seconds between transmissions';
COMMENT ON COLUMN TRANSPORTMEDIUM.EQUIPMENTID IS 'Legacy - not used';
COMMENT ON COLUMN TRANSPORTMEDIUM.TIMEADJUSTMENT IS '# of seconds to add to each transmit time from this TM';
COMMENT ON COLUMN TRANSPORTMEDIUM.PREAMBLE IS 'L=long, S=Short for GOES';
COMMENT ON COLUMN TRANSPORTMEDIUM.TIMEZONE IS 'Java time zone name used to parse date/time values that are in the message.
This doesn''t count time parsed from a message header which are usually in a known TZ.';
COMMENT ON COLUMN TRANSPORTMEDIUM.DOLOGIN IS 'TRUE or FALSE';
COMMENT ON TABLE TSDB_DATABASE_VERSION IS 'There should be a single row in this table. When schema is updated, the old row should be removed.';
COMMENT ON COLUMN TSDB_DATA_SOURCE.MODULE IS 'Further describes source: If DECODES routing spec, this should be the rs and ds names.
If manual entry, this is user name
If computation, this is comp name
If modeled, this is the model name, etc.';
COMMENT ON COLUMN TSDB_GROUP.GROUP_TYPE IS 'Must match a group_type enumeration value.';
COMMENT ON COLUMN TSDB_GROUP_MEMBER_GROUP.INCLUDE_GROUP IS 'How to combine child with parent: A=Add, S=Subtract, I=Intersect';
COMMENT ON COLUMN TSDB_GROUP_MEMBER_OTHER.MEMBER_TYPE IS 'Must match one of the database''s underlying TS ID Parts.';
COMMENT ON TABLE TSDB_PROPERTY IS 'Global properties on the database components.';
COMMENT ON COLUMN TS_NUM_0000.FLAGS IS 'Bitwise flags for each value';
COMMENT ON COLUMN TS_SPEC.STORAGE_TABLE IS 'Number of data storage table where values for this TS are stored.';
COMMENT ON COLUMN TS_SPEC.STORAGE_TYPE IS '''N'' for numeric, ''S'' for String.';
COMMENT ON COLUMN TS_SPEC.MODIFY_TIME IS 'Last Modify Time for this record, stored as Java msec time value UTC.';
COMMENT ON COLUMN TS_SPEC.UTC_OFFSET IS 'Initially set to NULL. After first ts value written, this is set to number of seconds.
';
COMMENT ON COLUMN TS_SPEC.ALLOW_DST_OFFSET_VARIATION IS 'NULL = use default in TSDB_PROPERTIES, TRUE=allow, FALSE=disallow';
COMMENT ON COLUMN TS_SPEC.OFFSET_ERROR_ACTION IS 'NULL=use default in TSDB_PROPERTIES, ROUND, REJECT, or IGNORE';
COMMENT ON COLUMN UNITCONVERTER.FROMUNITSABBR IS 'Standard abbreviation for this unit identifier';
COMMENT ON COLUMN UNITCONVERTER.TOUNITSABBR IS 'Standard abbreviation for this unit identifier';



