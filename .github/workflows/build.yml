name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    name: Build, Test, and Analyze
    strategy:
      matrix:
        java: [ '17', '21' ]
      fail-fast: false
      max-parallel: 4
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK ${{ matrix.Java }}
        uses: actions/setup-java@v4.7.1
        with:
          java-version: ${{ matrix.Java }}
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v4.2.3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ matrix.Java }}
          restore-keys: ${{ runner.os }}-sonar-${{ matrix.Java }}
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3.5.0
        with:
          dependency-graph: generate-and-submit
      - name: Build
        run: ./gradlew build
      - name: Integration Tests CWMS
        if: always()
        run: ./gradlew integrationTestCWMS --stacktrace --info
      - name: Integration Tests OpenTSDB
        if: always()
        run: ./gradlew integrationTestOpenTSDB --stacktrace --info
      - name: Upload WAR files
        uses: actions/upload-artifact@v4.6.2
        with:
          name: warfile-${{ matrix.Java }}
          path: ./**/build/libs/*.war
          retention-days: 1
          if-no-files-found: error
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4.6.2
        with:
          name: test-report
          path: ./**/build/reports/tests/**
          if-no-files-found: error
      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-report-${{ matrix.Java }}
          path: ./**/build/reports/jacoco/
          if-no-files-found: error
      - run: echo "jdk=${{ matrix.Java }}" >> $GITHUB_OUTPUT
          
  container-build:
    name: Build Container Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - run: |
          docker build -t odcs-api:test .