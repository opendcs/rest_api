/*
 *  Copyright 2025 OpenDCS Consortium and its Contributors
 *
 *  Licensed under the Apache License, Version 2.0 (the "License")
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

plugins {
    id "opendcs-rest-api.java-conventions"
    id "opendcs-rest-api.deps-conventions"
    id "opendcs-rest-api.publishing-conventions"
    id "war"
}

dependencies {
    implementation(libs.servlet.api)
    implementation(libs.slf4j.api)
    runtimeClasspath(libs.jstl)
    runtimeClasspath(libs.slf4j.jdk14)

    testImplementation(libs.selenium)
    testImplementation(libs.junit.api)
    testImplementation(libs.mockito.core)
    testImplementation(libs.mockito.junit.jupiter)
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = war.archiveBaseName.get()
            from components.java
        }
    }
}

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    sonarqube {
        properties {
            property 'sonar.sources', 'src/main/java,src/main/webapp'
            property 'sonar.exclusions', 'src/main/webapp/resources/js/plugins/**,' +
                    'src/main/webapp/resources/js/jquery*,' +
                    'src/main/webapp/resources/js/bootstrap*,' +
                    'src/main/webapp/resources/js/limitless/*,' +
                    'src/main/webapp/resources/js/datatables/dataTables.rowReorder.min.js,' +
                    'src/main/webapp/resources/css/bootstrap*,' +
                    'src/main/webapp/resources/css/limitless/*,' +
                    'src/main/webapp/resources/css/icons/**'
        }
    }
}

tasks.register('integrationTest', Test) {
    group "verification"
    useJUnitPlatform {
        includeTags "integration"
    }
    shouldRunAfter test
    dependsOn war
    systemProperties += project.properties.findAll { k, v -> k.startsWith("opendcs") }
}

test {
    useJUnitPlatform {
        excludeTags "integration"
    }
}