import org.cyclonedx.model.*

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
            classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.4.1.3373"
        }
        classpath "org.cyclonedx:cyclonedx-gradle-plugin:1.8.1"
    }
}

plugins {
    id "com.palantir.git-version" version "3.0.0"
}
if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    apply plugin: "org.sonarqube"
}

def static versionLabel(gitInfo) {
    def branch = gitInfo.branchName // all branches are snapshots, only tags get released
    def tag = gitInfo.lastTag
    // tag is returned as is. Branch may need cleanup
    return branch == null ? tag : 99 + "." + branch.replace("/", "-") + "-SNAPSHOT"
}

allprojects {
    group = 'org.opendcs'
    version = versionLabel(versionDetails())
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        apply plugin: "org.sonarqube"
    }
}

allprojects {
    apply plugin: "org.cyclonedx.bom"
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        sonarqube {
            properties {
                property "sonar.sources", "src/main/java"
                property "sonar.tests", "src/test/java"
                property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
            }
        }
    }
    cyclonedxBom {
        includeConfigs = ["runtimeClasspath"]
        projectType = "application"
        destination = file("build/reports/sbom")
        outputFormat = "json"
        outputName = "${project.name}-bom"
        setOrganizationalEntity {oe->
            oe.name = 'OpenDCS Consortium'
            oe.url = ['https://github.com/opendcs', 'https://github.com/opendcs/rest_api']
        }
        AttachmentText attachmentText = new AttachmentText()
        attachmentText.setText(rootProject.file('LICENSE.md').getText('UTF-8'))
        License license = new License()
        license.setId("Apache-2.0")
        license.setUrl("https://www.apache.org/licenses/LICENSE-2.0")
        license.setLicenseText(attachmentText)
        setLicenseChoice{lc->
            lc.addLicense(license)
        }
    }
}
if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    sonar {
        properties {
            property "sonar.projectKey", "opendcs_rest_api"
            property "sonar.organization", "opendcs"
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.pullrequest.provider", "GitHub"
            property "sonar.pullrequest.github.repository", "opendcs/rest_api"
        }
    }
}