plugins {
    id "opendcs-rest-api.java-conventions"
    id "opendcs-rest-api.deps-conventions"
    id "opendcs-rest-api.publishing-conventions"
    id "war"
}

dependencies {
    api(libs.opendcs) {
        //Workaround for the excessive opendcs dependencies
        exclude group: '*', module: '*'
    }
    implementation(libs.servlet.api)
    implementation(libs.slf4j.api)
    implementation(libs.jersey.client)
    implementation(libs.jersey.server)
    implementation(libs.json.jackson)
    implementation(libs.jersey.common)
    implementation(libs.jersey.hk2)
    implementation(libs.swagger.ui)
    implementation(libs.jaxb.runtime)

    testImplementation(libs.opendcs.test.extension) {
        exclude group: 'mil.army.usace.hec', module: '*'
        exclude group: 'lobobrowser', module: '*'
    }
    testImplementation(libs.opendcs.test.data)
    testImplementation(libs.database.postgres)
    //testImplementation(libs.system.stubs)
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = war.archiveBaseName.get()
            from components.java
        }
    }
}

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
    sonarqube {
        properties {
            property 'sonar.exclusions', 'src/main/resources/swaggerui/**'
        }
    }
}

test {
    systemProperties += project.properties.findAll { k, v -> k.startsWith("opendcs")}
    systemProperties += project.properties.findAll { k, v -> k.startsWith("testcontainers")}
    // In Java 9+ this can be handled with a service provider.
    // However, we are still targeting 8 for the time being.
    jvmArgs += "-Djava.protocol.handler.pkgs=org.opendcs.spi.url"
}